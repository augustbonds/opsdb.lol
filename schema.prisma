generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Typee {
    id      String    @default(cuid()) @id
    name    String
    votes   Vote[]
}

model Vote {
  id        String     @default(cuid()) @id
  author    User?      @relation(fields: [authorId], references: [id])
  authorId  String?
  typee     Typee?     @relation(fields: [typeeId], references: [id])
  typeeId   String?  
  observerOrDecider ObserverOrDecider
  diOrDe DiOrDe
  oiOrOe OiOrOe
  nOrS NOrS
  fOrT FOrT
  sleepOrPlay SleepOrPlay
  consumeOrBlast ConsumeOrBlast
  infoOrEnergy InfoOrEnergy
  iOrE IOrE
}

model User {
  id            String       @default(cuid()) @id
  name          String?
  email         String?   @unique
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  votes         Vote[]
  @@map(name: "users")
}

enum ObserverOrDecider {
    Observer
    Decider 
}

enum DiOrDe {
    Di
    De
}

enum OiOrOe {
    Oi
    Oe
}

enum NOrS {
    N
    S
}

enum FOrT {
    F
    T
}

enum SleepOrPlay {
    Sleep
    Play
}

enum ConsumeOrBlast {
    Consume
    Blast
}

enum InfoOrEnergy {
    Info
    Energy
}

enum IOrE {
    I
    E
}